import pygame
import random
import math
import time
from pygame import mixer
import os
import sys

# Initialize the pygame
pygame.init()

# create the screen
screen = pygame.display.set_mode((800, 600))

# Images
pygame.display.set_caption("Rozla Smash")
icon = pygame.image.load("ufo.png")
pygame.display.set_icon(icon)
rightarrowkey = pygame.image.load("rightarrow1.png")
leftarrowkey = pygame.image.load("leftarrow1.png")
akey = pygame.image.load("akey.png")
dkey = pygame.image.load("dkey.png")
pkey = pygame.image.load("pkey.png")
spacebar = pygame.image.load("spacebar.png")
unmutePhoto = pygame.image.load("speaker.png")
mutePhoto = pygame.image.load("mute.png")
unmutePhotow = pygame.image.load("speakerw.png")
mutePhotow = pygame.image.load("mutew.png")
playerImg = pygame.image.load("player.png")
bulletImg = pygame.image.load("bullet.png")

# Background Image
background = pygame.image.load("background1.jpg")

# Background sound

pygame.mixer.music.load("theme1.wav")
pygame.mixer.music.play(-1)


volumechange = True

def volumemute():
    global volumechange
    volumechange = False
    print("volume muted")
    pygame.mixer.music.pause()


def volumeunmute():
    global volumechange
    volumechange = True
    print("volume unmuted")
    pygame.mixer.music.unpause()




# Player
playerImg = pygame.transform.scale(playerImg, (60, 60))
playerX = 370
playerY = 480
playerX_change = 0

# Game Over text
over_font = pygame.font.Font("freesansbold.ttf", 70)


def game_over_text():
    over_text = over_font.render("GAME OVER", True, (255, 255, 255))
    screen.blit(over_text, (180, 250))


# Enemies
enemyImg = []
enemyX = []
enemyY = []
enemyX_change = []
enemyY_change = []
#num_of_enemies = int(input("ENTER ENEMIES: "))
num_of_enemies = 6


for i in range(num_of_enemies):
    enemyImg.append(pygame.image.load("enemy69.png"))
    enemyImg.append(pygame.image.load("enemy31.png"))
    enemyX.append(random.randint(20, 730))
    enemyY.append(random.randint(50, 150))
    enemyY_change.append(80)
    enemyX_change.append(2)

# Bullet
# Ready - no bullet on the screen
# Fire - bullet is fired

bulletImg = pygame.transform.scale(bulletImg, (40, 40))
bulletX = 0
bulletY = 480
bulletX_change = 0
bulletY_change = 5
bullet_state = "ready"

# Other
score_value = 0

clock = pygame.time.Clock()

pause = False

# Font

font = pygame.font.SysFont("comicsansms", 35)


def player1(x, y):
    screen.blit(playerImg, (x, y))


def testik():
    print("Hello Vadim")


def enemy(x, y, i):
    screen.blit(enemyImg[i], (x, y))


def fire_bullet(x, y):
    global bullet_state
    bullet_state = "fire"
    screen.blit(bulletImg, (x + 10, y + 10))


def is_collision(enemyX, enemyY, bulletX, bulletY):
    distance = math.hypot(enemyX - bulletX, enemyY - bulletY)
    if distance < 60:
        return True
    else:
        return False


def text_objects(text, font):
    textSurface = font.render(text, True, (0, 0, 0))
    return textSurface, textSurface.get_rect()


def text_objectsw(text, font):
    textSurface = font.render(text, True, (255, 255, 255))
    return textSurface, textSurface.get_rect()


def button(msg, x, y, w, h, ic, ac, action=None):
    mouse = pygame.mouse.get_pos()
    click = pygame.mouse.get_pressed()

    if x + w > mouse[0] > x and y + h > mouse[1] > y:
        pygame.draw.rect(screen, ac, (x, y, w, h))
        if click[0] == 1 and action != None:
            action()
    else:
        pygame.draw.rect(screen, ic, (x, y, w, h))
    smallText = pygame.font.SysFont("comicsansms", 20)
    textSurf, textRect = text_objects(msg, smallText)
    textRect.center = ((x + (w / 2)), (y + (h / 2)))
    screen.blit(textSurf, textRect)


def quitgame():
    pygame.quit()
    quit()
    exit()


def game_intro():
    intro = True
    pygame.mixer.music.set_volume(1)

    while intro:
        for event in pygame.event.get():
            # print(event)
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

        screen.fill((255, 255, 255))
        largeText = pygame.font.SysFont("comicsansms", 100)
        TextSurf, TextRect = text_objects("Rozla Smash", largeText)
        TextRect.center = ((800 / 2), 200)
        screen.blit(TextSurf, TextRect)

        button("Play", 150, 450, 100, 50, (0, 255, 0), (0, 150, 0), game_loop)
        button("Quit", 550, 450, 100, 50, (255, 0, 0), (150, 0, 0), quitgame)
        button("Controls", 350, 450, 100, 50, (0, 0, 255), (0, 0, 150), settings)
        #button("ADD ENEMY", 350, 550, 100, 50, (0, 0, 255), (0, 0, 150), testik)
        button("", 600, 20, 66, 66, (255, 255, 255), (255, 255, 255), volumemute)
        button("", 700, 20, 66, 66, (255, 255, 255), (255, 255, 255), volumeunmute)

        screen.blit(mutePhoto, (600, 20))
        screen.blit(unmutePhoto, (700, 20))


        pygame.display.update()


def unpause():
    game_loop()


def paused():
    ############
    pygame.mixer.music.set_volume(1)
    #screen.fill((255, 255, 255))
    #############
    largeText = pygame.font.SysFont("freesansbold", 115)
    TextSurf, TextRect = text_objectsw("PAUSED", largeText)
    TextRect.center = (400, 200)
    screen.blit(TextSurf, TextRect)

    pause = True

    while pause:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_p:
                    pause = False

        button("Continue", 150, 450, 100, 50, (0, 255, 0), (0, 150, 0), unpause)
        button("Quit", 550, 450, 100, 50, (255, 0, 0), (150, 0, 0), quitgame)

        button("", 600, 20, 66, 66, (0, 0, 0), (0, 0, 0), volumemute)
        button("", 700, 20, 66, 66, (0, 0, 0), (0, 0, 0), volumeunmute)

        screen.blit(mutePhotow, (600, 20))
        screen.blit(unmutePhotow, (700, 20))

        pygame.display.update()
        clock.tick(15)


def gameover():
    ############
    pygame.mixer.music.set_volume(1)
    screen.fill((255, 255, 255))
    #############
    largeText = pygame.font.SysFont("freesansbold", 115)
    TextSurf, TextRect = text_objects("GAME OVER", largeText)
    TextRect.center = (400, 200)
    screen.blit(TextSurf, TextRect)

    while pause:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

        button("Play again", 150, 450, 100, 50, (0, 255, 0), (0, 150, 0), game_loop)
        button("Quit", 550, 450, 100, 50, (255, 0, 0), (150, 0, 0), quitgame)

        score = font.render("Score: " + str(score_value), True, (0, 0, 0))
        screen.blit(score, (340, 350))
        pygame.display.update()


def textos(surf, rect):
    screen.blit(surf, rect)


def settings():
    pygame.mixer.music.set_volume(1)
    screen.fill((255, 255, 255))
    # Texts
    largeText = pygame.font.SysFont("freesansbold", 100)
    settingsText = pygame.font.SysFont("freesansbold", 40)
    TextSurf, TextRect = text_objects("Controls", largeText)
    TextMurf, TextMect = text_objects("Move:          / ", settingsText)
    TextNurf, TextNect = text_objects("Shoot: ", settingsText)
    TextPurf, TextPect = text_objects("Pause: ", settingsText)
    TextRect.center = ((800 / 2), 100)
    TextMect = (290, 300)
    TextNect = (290, 350)
    TextPect = (290, 400)
    textos(TextSurf, TextRect)
    textos(TextMurf, TextMect)
    textos(TextNurf, TextNect)
    textos(TextPurf, TextPect)
    screen.blit(rightarrowkey, (505, 298))
    screen.blit(leftarrowkey, (465, 298))
    screen.blit(akey, (373, 298))
    screen.blit(dkey, (410, 298))
    screen.blit(pkey, (385, 400))
    screen.blit(spacebar, (390, 350))

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

        button("Back", 600, 500, 100, 50, (255, 255, 0), (230, 230, 0), game_intro)

        pygame.display.update()


def game_loop():
    global playerX
    global playerX_change
    global bulletX
    global bulletY
    global bullet_state
    global score_value
    global pause

    pygame.mixer.music.set_volume(1)

    running = True
    while running:

        # Color
        screen.fill((0, 0, 0))
        # Background Image
        screen.blit(background, (0, 0))

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                quitgame()
            # Player movement
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    playerX_change -= 2
                elif event.key == pygame.K_a:
                    playerX_change -= 2
                elif event.key == pygame.K_RIGHT:
                    playerX_change += 2
                elif event.key == pygame.K_d:
                    playerX_change += 2
                elif event.key == pygame.K_p:
                    paused()
                # Bullet
                elif event.key == pygame.K_SPACE:
                    if bullet_state is "ready":
                        if volumechange:
                            laser_Sound = mixer.Sound("laser.wav")
                            laser_Sound.play()
                        bulletX = playerX
                        fire_bullet(playerX, bulletY)
                elif event.key == pygame.K_ESCAPE:
                    running = False
            elif event.type == pygame.KEYUP:
                if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
                    playerX_change = 0
                elif event.key == pygame.K_a or event.key == pygame.K_d:
                    playerX_change = 0

        playerX += playerX_change

        # Edge block
        if playerX <= playerX_change:
            playerX = 0.1
        elif playerX >= 740:
            playerX = 739.9

        # Line
        pygame.draw.line(screen, (255, 255, 255), [0, 460], [50, 460], 3)
        pygame.draw.line(screen, (255, 255, 255), [750, 460], [801, 460], 3)

        # Enemy movement
        for i in range(num_of_enemies):

            enemyX[i] += enemyX_change[i]
            if enemyX[i] <= playerX_change:
                enemyX_change[i] = 2
                enemyY[i] += enemyY_change[i]
            elif enemyX[i] >= 740:
                enemyX_change[i] = -2
                enemyY[i] += enemyY_change[i]

            # Collision
            collision = is_collision(enemyX[i], enemyY[i], bulletX, bulletY)
            if collision:
                if volumechange:
                    explosion_Sound = mixer.Sound("explosion.wav")
                    explosion_Sound.play()
                bulletY = 480
                bullet_state = "ready"
                score_value += 1
                enemyX[i] = random.randint(20, 730)
                enemyY[i] = random.randint(30, 120)

            # Game over
            if enemyY[i] > 365:
                for j in range(num_of_enemies):
                    enemyY[j] = 2000
                pause = True
                gameover()
                break

            enemy(enemyX[i], enemyY[i], i)

        # Bullet movement
        if bulletY <= 0:
            bulletY = 480
            bullet_state = "ready"
        if bullet_state is "fire":
            fire_bullet(bulletX, bulletY)
            bulletY -= bulletY_change

        player1(playerX, playerY)

        # Show score

        score = font.render("Score: " + str(score_value), True, (255, 255, 255))
        screen.blit(score, (10, 10))
        pygame.display.update()


game_intro()
game_loop()
